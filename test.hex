//This test case is designed to be passed without stalling implmented and 
// the majority of it can be passed without forwarding. 
//It is designed to help people that implement the majority of the pipeline but struggle with 
//some of the hazards. Refer to the bottom of
// the test case for debugging help. 
@0
8411
8051
84e1
100
ffff


//This is the dissassembled code with further explanation
/*

//Need forwarding prints N
r6 = 1
r7 = 1
r6 = r6 - r7
r1 = 200
r1 = 5
r1 = 78
r0 = r1 - r0

//Fake flushing to help if forwarding isn't implemented
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 6


//Don't need forwarding prints M
r10 = 2
r1 = 77
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 0
r0 = r1 - r0

//Tests jump statement should jump to the start print NM and keep going from here
!r6 -> r10


//Fake flushing to help if forwarding isn't implemented
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 6


//Should be able to get through this without forwording should print AA, lots of
// intermediate statements to help flush the pipeline for you
r1 = 0
r3 = *r1
r5 = 1
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 6
r4 = *r5
r1 = 65
r1 = 65
r1 = 65
r1 = 65
*r4 = r1
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 6
r8 = *r4
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 6
r0 = r8 - r0
r2 = 1
r2 = 2
r2 = 3
r2 = 4
r2 = 5
r2 = 6
r10 = 65
r0 = r10 - r0
*/